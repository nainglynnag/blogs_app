<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Sign Up - SkyBlog</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
      tailwind.config = {
        theme: {
          extend: {
            fontFamily: {
              inter: ["Inter", "sans-serif"],
            },
          },
        },
      };
    </script>
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
  </head>
  <body
    class="font-inter bg-gradient-to-br from-sky-100 via-blue-50 to-indigo-100 min-h-screen"
  >
    <!-- Navigation -->
    <nav class="bg-white/80 backdrop-blur-md shadow-sm">
      <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center h-16">
          <div class="flex items-center">
            <button
              onclick="goBack()"
              class="mr-4 text-gray-600 hover:text-sky-600 transition-colors"
            >
              ‚Üê Back
            </button>
            <!-- <h1 class="text-2xl font-bold text-sky-600">SkyBlog</h1> -->
            <h1 class="text-2xl font-bold text-sky-600">
              <a href="/">SkyBlog</a>
            </h1>
          </div>
          <div class="hidden md:block">
            <div class="ml-10 flex items-baseline space-x-8">
              <a
                href="#"
                class="text-gray-700 hover:text-sky-600 px-3 py-2 rounded-md text-sm font-medium transition-colors"
                >Home</a
              >
              <a
                href="#"
                class="text-gray-700 hover:text-sky-600 px-3 py-2 rounded-md text-sm font-medium transition-colors"
                >About</a
              >
              <a
                href="#"
                class="text-gray-700 hover:text-sky-600 px-3 py-2 rounded-md text-sm font-medium transition-colors"
                >Categories</a
              >
              <a
                href="#"
                class="text-gray-700 hover:text-sky-600 px-3 py-2 rounded-md text-sm font-medium transition-colors"
                >Contact</a
              >
            </div>
          </div>
          <div class="text-sm text-gray-600">
            Already have an account?
            <button
              onclick="showLogin()"
              class="text-sky-600 hover:text-sky-700 font-medium"
            >
              Sign in
            </button>
          </div>
        </div>
      </div>
    </nav>

    <!-- Main Content -->
    <main
      class="flex items-center justify-center min-h-[calc(100vh-4rem)] px-4 py-12"
    >
      <div class="max-w-md w-full">
        <!-- Register Card -->
        <div class="bg-white/80 backdrop-blur-md rounded-2xl shadow-2xl p-8">
          <!-- Header -->
          <div class="text-center mb-8">
            <div
              class="w-16 h-16 bg-sky-100 rounded-full flex items-center justify-center mx-auto mb-4"
            >
              <span class="text-2xl text-sky-600">üöÄ</span>
            </div>
            <h2 class="text-3xl font-bold text-gray-800 mb-2">Join SkyBlog</h2>
            <p class="text-gray-600">
              Create your account and start sharing your stories
            </p>
          </div>

          <!-- Social Register Buttons -->
          <div class="space-y-3 mb-6">
            <button
              id="googleRegister"
              class="w-full flex items-center justify-center px-4 py-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors group"
            >
              <svg class="w-5 h-5 mr-3" viewBox="0 0 24 24">
                <path
                  fill="#4285F4"
                  d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"
                />
                <path
                  fill="#34A853"
                  d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"
                />
                <path
                  fill="#FBBC05"
                  d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"
                />
                <path
                  fill="#EA4335"
                  d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"
                />
              </svg>
              <span class="text-gray-700 font-medium">Sign up with Google</span>
            </button>

            <button
              id="githubRegister"
              class="w-full flex items-center justify-center px-4 py-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors group"
            >
              <svg class="w-5 h-5 mr-3 fill-gray-700" viewBox="0 0 24 24">
                <path
                  d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"
                />
              </svg>
              <span class="text-gray-700 font-medium">Sign up with GitHub</span>
            </button>
          </div>

          <!-- Divider -->
          <div class="relative mb-6">
            <div class="absolute inset-0 flex items-center">
              <div class="w-full border-t border-gray-200"></div>
            </div>
            <div class="relative flex justify-center text-sm">
              <span class="px-4 bg-white text-gray-500"
                >Or create account with email</span
              >
            </div>
          </div>

          <!-- Register Form -->
          <form
            id="registerForm"
            class="space-y-6"
            action="/register"
            method="POST"
          >
            <!-- Full Name Input -->
            <div>
              <label
                for="fullName"
                class="block text-sm font-medium text-gray-700 mb-2"
                >Full Name</label
              >
              <div class="relative">
                <input
                  type="text"
                  id="fullName"
                  name="fullName"
                  required
                  placeholder="Enter your full name"
                  class="w-full px-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-sky-500 focus:border-transparent transition-colors pl-11"
                />
                <div
                  class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none"
                >
                  <span class="text-gray-400 text-lg">üë§</span>
                </div>
              </div>
              <div
                id="nameError"
                class="text-red-500 text-sm mt-1 hidden"
              ></div>
            </div>

            <!-- Email Input -->
            <div>
              <label
                for="email"
                class="block text-sm font-medium text-gray-700 mb-2"
                >Email Address</label
              >
              <div class="relative">
                <input
                  type="email"
                  id="email"
                  name="email"
                  required
                  placeholder="Enter your email"
                  class="w-full px-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-sky-500 focus:border-transparent transition-colors pl-11"
                />
                <div
                  class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none"
                >
                  <span class="text-gray-400 text-lg">üìß</span>
                </div>
              </div>
              <div
                id="emailError"
                class="text-red-500 text-sm mt-1 hidden"
              ></div>
            </div>

            <!-- Password Input -->
            <div>
              <label
                for="password"
                class="block text-sm font-medium text-gray-700 mb-2"
                >Password</label
              >
              <div class="relative">
                <input
                  type="password"
                  id="password"
                  name="password"
                  required
                  placeholder="Create a strong password"
                  class="w-full px-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-sky-500 focus:border-transparent transition-colors pl-11 pr-11"
                />
                <div
                  class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none"
                >
                  <span class="text-gray-400 text-lg">üîí</span>
                </div>
                <button
                  type="button"
                  id="togglePassword"
                  class="absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-600"
                >
                  <span id="eyeIcon">üëÅÔ∏è</span>
                </button>
              </div>
              <div
                id="passwordError"
                class="text-red-500 text-sm mt-1 hidden"
              ></div>
              <!-- Password Strength Indicator -->
              <div class="mt-2">
                <div class="flex space-x-1">
                  <div
                    id="strength1"
                    class="h-1 w-1/4 bg-gray-200 rounded"
                  ></div>
                  <div
                    id="strength2"
                    class="h-1 w-1/4 bg-gray-200 rounded"
                  ></div>
                  <div
                    id="strength3"
                    class="h-1 w-1/4 bg-gray-200 rounded"
                  ></div>
                  <div
                    id="strength4"
                    class="h-1 w-1/4 bg-gray-200 rounded"
                  ></div>
                </div>
                <p id="strengthText" class="text-xs text-gray-500 mt-1">
                  Password strength
                </p>
              </div>
            </div>

            <!-- Confirm Password Input -->
            <div>
              <label
                for="confirmPassword"
                class="block text-sm font-medium text-gray-700 mb-2"
                >Confirm Password</label
              >
              <div class="relative">
                <input
                  type="password"
                  id="confirmPassword"
                  name="confirmPassword"
                  required
                  placeholder="Confirm your password"
                  class="w-full px-4 py-3 border border-gray-200 rounded-lg focus:ring-2 focus:ring-sky-500 focus:border-transparent transition-colors pl-11 pr-11"
                />
                <div
                  class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none"
                >
                  <span class="text-gray-400 text-lg">üîê</span>
                </div>
                <button
                  type="button"
                  id="toggleConfirmPassword"
                  class="absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-600"
                >
                  <span id="confirmEyeIcon">üëÅÔ∏è</span>
                </button>
              </div>
              <div
                id="confirmPasswordError"
                class="text-red-500 text-sm mt-1 hidden"
              ></div>
            </div>

            <!-- Terms and Privacy -->
            <div class="flex items-start">
              <input
                type="checkbox"
                id="agreeTerms"
                name="agreeTerms"
                required
                class="w-4 h-4 text-sky-600 border-gray-300 rounded focus:ring-sky-500 mt-1"
              />
              <label for="agreeTerms" class="ml-3 text-sm text-gray-600">
                I agree to the
                <button
                  type="button"
                  onclick="showTerms()"
                  class="text-sky-600 hover:text-sky-700 underline"
                >
                  Terms of Service
                </button>
                and
                <button
                  type="button"
                  onclick="showPrivacy()"
                  class="text-sky-600 hover:text-sky-700 underline"
                >
                  Privacy Policy
                </button>
              </label>
            </div>
            <div id="termsError" class="text-red-500 text-sm hidden"></div>

            <!-- Newsletter Subscription -->
            <div class="flex items-start">
              <input
                type="checkbox"
                id="newsletter"
                name="newsletter"
                class="w-4 h-4 text-sky-600 border-gray-300 rounded focus:ring-sky-500 mt-1"
              />
              <label for="newsletter" class="ml-3 text-sm text-gray-600">
                Subscribe to our newsletter for the latest updates and articles
              </label>
            </div>

            <!-- Register Button -->
            <button
              type="submit"
              id="registerBtn"
              class="w-full bg-sky-500 hover:bg-sky-600 text-white font-medium py-3 px-4 rounded-lg transition-colors focus:ring-2 focus:ring-sky-500 focus:ring-offset-2"
            >
              Create Account
            </button>
          </form>

          <!-- Sign In Link -->
          <div class="text-center mt-6 pt-6 border-t border-gray-200">
            <p class="text-gray-600">
              Already have an account?
              <button
                onclick="showLogin()"
                class="text-sky-600 hover:text-sky-700 font-medium"
              >
                Sign in here
              </button>
            </p>
          </div>
        </div>

        <!-- Security Notice -->
        <div
          class="mt-6 bg-green-50/80 backdrop-blur-sm rounded-lg p-4 border border-green-200"
        >
          <div class="flex items-start">
            <span class="text-green-600 text-lg mr-3">üîê</span>
            <div>
              <h3 class="text-sm font-medium text-green-800 mb-1">
                Your data is secure
              </h3>
              <p class="text-xs text-green-700">
                We use industry-standard encryption to protect your personal
                information and never share your data with third parties.
              </p>
            </div>
          </div>
        </div>
      </div>
    </main>

    <!-- Loading Overlay -->
    <div
      id="loadingOverlay"
      class="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 hidden flex items-center justify-center"
    >
      <div class="bg-white rounded-2xl p-8 text-center shadow-2xl">
        <div
          class="w-12 h-12 border-4 border-sky-500 border-t-transparent rounded-full animate-spin mx-auto mb-4"
        ></div>
        <p class="text-gray-700 font-medium">Creating your account...</p>
      </div>
    </div>

    <!-- Success Modal -->
    <div
      id="successModal"
      class="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 hidden flex items-center justify-center"
    >
      <div
        class="bg-white rounded-2xl p-8 text-center shadow-2xl max-w-sm mx-4"
      >
        <div
          class="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4"
        >
          <span class="text-2xl text-green-600">üéâ</span>
        </div>
        <h3 class="text-xl font-bold text-gray-800 mb-2">
          Welcome to SkyBlog!
        </h3>
        <p class="text-gray-600 mb-6">
          Your account has been created successfully. Please check your email to
          verify your account.
        </p>
        <button
          onclick="closeSuccessModal()"
          class="bg-sky-500 hover:bg-sky-600 text-white px-6 py-2 rounded-lg font-medium transition-colors"
        >
          Get Started
        </button>
      </div>
    </div>

    <script>
      // Password visibility toggles
      document
        .getElementById("togglePassword")
        .addEventListener("click", function () {
          const passwordInput = document.getElementById("password");
          const eyeIcon = document.getElementById("eyeIcon");

          if (passwordInput.type === "password") {
            passwordInput.type = "text";
            eyeIcon.textContent = "üôà";
          } else {
            passwordInput.type = "password";
            eyeIcon.textContent = "üëÅÔ∏è";
          }
        });

      document
        .getElementById("toggleConfirmPassword")
        .addEventListener("click", function () {
          const confirmPasswordInput =
            document.getElementById("confirmPassword");
          const confirmEyeIcon = document.getElementById("confirmEyeIcon");

          if (confirmPasswordInput.type === "password") {
            confirmPasswordInput.type = "text";
            confirmEyeIcon.textContent = "üôà";
          } else {
            confirmPasswordInput.type = "password";
            confirmEyeIcon.textContent = "üëÅÔ∏è";
          }
        });

      // Form validation functions
      function validateEmail(email) {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return emailRegex.test(email);
      }

      function validateName(name) {
        return name.trim().length >= 2;
      }

      function validatePassword(password) {
        return password.length >= 8;
      }

      function checkPasswordStrength(password) {
        let strength = 0;
        const checks = [
          password.length >= 8,
          /[a-z]/.test(password),
          /[A-Z]/.test(password),
          /[0-9]/.test(password),
          /[^A-Za-z0-9]/.test(password),
        ];

        strength = checks.filter(Boolean).length;
        return Math.min(strength, 4);
      }

      function updatePasswordStrength(password) {
        const strength = checkPasswordStrength(password);
        const strengthBars = [
          "strength1",
          "strength2",
          "strength3",
          "strength4",
        ];
        const strengthText = document.getElementById("strengthText");

        // Reset all bars
        strengthBars.forEach((bar) => {
          document.getElementById(bar).className =
            "h-1 w-1/4 bg-gray-200 rounded";
        });

        // Update based on strength
        const colors = [
          "bg-red-400",
          "bg-orange-400",
          "bg-yellow-400",
          "bg-green-400",
        ];
        const texts = ["Very weak", "Weak", "Fair", "Strong"];

        if (strength > 0) {
          for (let i = 0; i < strength; i++) {
            document.getElementById(strengthBars[i]).className = `h-1 w-1/4 ${
              colors[strength - 1]
            } rounded`;
          }
          strengthText.textContent = texts[strength - 1];
          strengthText.className = `text-xs mt-1 ${
            strength < 3 ? "text-red-500" : "text-green-600"
          }`;
        } else {
          strengthText.textContent = "Password strength";
          strengthText.className = "text-xs text-gray-500 mt-1";
        }
      }

      function showError(elementId, message) {
        const errorElement = document.getElementById(elementId);
        errorElement.textContent = message;
        errorElement.classList.remove("hidden");
      }

      function hideError(elementId) {
        const errorElement = document.getElementById(elementId);
        errorElement.classList.add("hidden");
      }

      // Real-time validation
      document.getElementById("fullName").addEventListener("blur", function () {
        const name = this.value.trim();
        if (name && !validateName(name)) {
          showError("nameError", "Name must be at least 2 characters long");
          this.classList.add("border-red-300");
        } else {
          hideError("nameError");
          this.classList.remove("border-red-300");
        }
      });

      document.getElementById("email").addEventListener("blur", function () {
        const email = this.value.trim();
        if (email && !validateEmail(email)) {
          showError("emailError", "Please enter a valid email address");
          this.classList.add("border-red-300");
        } else {
          hideError("emailError");
          this.classList.remove("border-red-300");
        }
      });

      document
        .getElementById("password")
        .addEventListener("input", function () {
          const password = this.value;
          updatePasswordStrength(password);

          if (password && !validatePassword(password)) {
            showError(
              "passwordError",
              "Password must be at least 8 characters long"
            );
            this.classList.add("border-red-300");
          } else {
            hideError("passwordError");
            this.classList.remove("border-red-300");
          }

          // Check confirm password match
          const confirmPassword =
            document.getElementById("confirmPassword").value;
          if (confirmPassword && password !== confirmPassword) {
            showError("confirmPasswordError", "Passwords do not match");
            document
              .getElementById("confirmPassword")
              .classList.add("border-red-300");
          } else if (confirmPassword) {
            hideError("confirmPasswordError");
            document
              .getElementById("confirmPassword")
              .classList.remove("border-red-300");
          }
        });

      document
        .getElementById("confirmPassword")
        .addEventListener("blur", function () {
          const password = document.getElementById("password").value;
          const confirmPassword = this.value;

          if (confirmPassword && password !== confirmPassword) {
            showError("confirmPasswordError", "Passwords do not match");
            this.classList.add("border-red-300");
          } else {
            hideError("confirmPasswordError");
            this.classList.remove("border-red-300");
          }
        });

      // Form submission
      document
        .getElementById("registerForm")
        .addEventListener("submit", function (e) {
          e.preventDefault();

          const fullName = document.getElementById("fullName").value.trim();
          const email = document.getElementById("email").value.trim();
          const password = document.getElementById("password").value;
          const confirmPassword =
            document.getElementById("confirmPassword").value;
          const agreeTerms = document.getElementById("agreeTerms").checked;

          // Clear previous errors
          [
            "nameError",
            "emailError",
            "passwordError",
            "confirmPasswordError",
            "termsError",
          ].forEach(hideError);

          let hasErrors = false;

          // Validate full name
          if (!fullName) {
            showError("nameError", "Full name is required");
            hasErrors = true;
          } else if (!validateName(fullName)) {
            showError("nameError", "Name must be at least 2 characters long");
            hasErrors = true;
          }

          // Validate email
          if (!email) {
            showError("emailError", "Email is required");
            hasErrors = true;
          } else if (!validateEmail(email)) {
            showError("emailError", "Please enter a valid email address");
            hasErrors = true;
          }

          // Validate password
          if (!password) {
            showError("passwordError", "Password is required");
            hasErrors = true;
          } else if (!validatePassword(password)) {
            showError(
              "passwordError",
              "Password must be at least 8 characters long"
            );
            hasErrors = true;
          }

          // Validate confirm password
          if (!confirmPassword) {
            showError("confirmPasswordError", "Please confirm your password");
            hasErrors = true;
          } else if (password !== confirmPassword) {
            showError("confirmPasswordError", "Passwords do not match");
            hasErrors = true;
          }

          // Validate terms agreement
          if (!agreeTerms) {
            showError(
              "termsError",
              "You must agree to the Terms of Service and Privacy Policy"
            );
            hasErrors = true;
          }

          if (hasErrors) return;

          // Show loading
          document.getElementById("loadingOverlay").classList.remove("hidden");

          // Simulate registration process
          setTimeout(() => {
            document.getElementById("loadingOverlay").classList.add("hidden");
            showSuccessModal();
          }, 2500);
        });

      // Social registration handlers
      document
        .getElementById("googleRegister")
        .addEventListener("click", function () {
          this.innerHTML =
            '<div class="w-5 h-5 border-2 border-gray-400 border-t-transparent rounded-full animate-spin mr-3"></div><span class="text-gray-700 font-medium">Connecting to Google...</span>';

          setTimeout(() => {
            this.innerHTML = `
                    <svg class="w-5 h-5 mr-3" viewBox="0 0 24 24">
                        <path fill="#4285F4" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
                        <path fill="#34A853" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
                        <path fill="#FBBC05" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
                        <path fill="#EA4335" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
                    </svg>
                    <span class="text-gray-700 font-medium">Sign up with Google</span>
                `;
            showSuccessModal();
          }, 1500);
        });

      document
        .getElementById("githubRegister")
        .addEventListener("click", function () {
          this.innerHTML =
            '<div class="w-5 h-5 border-2 border-gray-400 border-t-transparent rounded-full animate-spin mr-3"></div><span class="text-gray-700 font-medium">Connecting to GitHub...</span>';

          setTimeout(() => {
            this.innerHTML = `
                    <svg class="w-5 h-5 mr-3 fill-gray-700" viewBox="0 0 24 24">
                        <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                    </svg>
                    <span class="text-gray-700 font-medium">Sign up with GitHub</span>
                `;
            showSuccessModal();
          }, 1500);
        });

      // Success modal functions
      function showSuccessModal() {
        document.getElementById("successModal").classList.remove("hidden");
        // registerForm.submit();
      }

      function closeSuccessModal() {
        document.getElementById("successModal").classList.add("hidden");
        // Simulate redirect to login or dashboard
        setTimeout(() => {
          // alert("Redirecting to login...");
          registerForm.submit();
          // location.href = "login";
        }, 500);
      }

      // Navigation functions
      function goBack() {
        window.history.back();
      }

      function showLogin() {
        window.location.href = "login";
      }

      function showTerms() {
        alert(
          "Terms of Service:\n\n1. Use the platform responsibly\n2. Respect other users\n3. No spam or harmful content\n4. Follow community guidelines\n\n(This is a demo - full terms would be displayed in a modal)"
        );
      }

      function showPrivacy() {
        alert(
          "Privacy Policy:\n\n‚Ä¢ We protect your personal data\n‚Ä¢ We don't sell your information\n‚Ä¢ You control your privacy settings\n‚Ä¢ We use cookies for better experience\n\n(This is a demo - full policy would be displayed in a modal)"
        );
      }

      // Auto-focus first input
      window.addEventListener("load", function () {
        document.getElementById("fullName").focus();
      });

      // Enter key navigation
      document
        .getElementById("fullName")
        .addEventListener("keypress", function (e) {
          if (e.key === "Enter") {
            document.getElementById("email").focus();
          }
        });

      document
        .getElementById("email")
        .addEventListener("keypress", function (e) {
          if (e.key === "Enter") {
            document.getElementById("password").focus();
          }
        });

      document
        .getElementById("password")
        .addEventListener("keypress", function (e) {
          if (e.key === "Enter") {
            document.getElementById("confirmPassword").focus();
          }
        });

      // Warn before leaving page
      window.addEventListener("beforeunload", function (e) {
        const fullName = document.getElementById("fullName").value.trim();
        const email = document.getElementById("email").value.trim();

        if (fullName || email) {
          e.preventDefault();
          e.returnValue = "";
        }
      });
    </script>
    <script>
      (function () {
        function c() {
          var b = a.contentDocument || a.contentWindow.document;
          if (b) {
            var d = b.createElement("script");
            d.innerHTML =
              "window.__CF$cv$params={r:'96a56cc3d157798f',t:'MTc1NDM4Nzc4OS4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";
            b.getElementsByTagName("head")[0].appendChild(d);
          }
        }
        if (document.body) {
          var a = document.createElement("iframe");
          a.height = 1;
          a.width = 1;
          a.style.position = "absolute";
          a.style.top = 0;
          a.style.left = 0;
          a.style.border = "none";
          a.style.visibility = "hidden";
          document.body.appendChild(a);
          if ("loading" !== document.readyState) c();
          else if (window.addEventListener)
            document.addEventListener("DOMContentLoaded", c);
          else {
            var e = document.onreadystatechange || function () {};
            document.onreadystatechange = function (b) {
              e(b);
              "loading" !== document.readyState &&
                ((document.onreadystatechange = e), c());
            };
          }
        }
      })();
    </script>
  </body>
</html>
